<UserControl x:Class="TLCGen.Views.PTPKoppelingenTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:viewModels="clr-namespace:TLCGen.ViewModels"
             xmlns:controls="clr-namespace:TLCGen.Controls;assembly=TLCGen.Controls"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:PTPKoppelingenTabViewModel}"
             d:DesignHeight="300" d:DesignWidth="900" x:Name="Root">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="Bool2VisConv" />
    </UserControl.Resources>
    <Grid>
        <TabControl>
            <TabItem Header="PTP koppelingen">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <FrameworkElement x:Name="ProxyElement" DataContext="{Binding}" />
                    <DataGrid Grid.Row="0" ItemsSource="{Binding Path=PTPKoppelingen}" Margin="2"
                              SelectedItem="{Binding Path=SelectedPTPKoppeling,UpdateSourceTrigger=PropertyChanged}"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Kruispunt" Binding="{Binding Path=TeKoppelenKruispunt,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn Header="# In" Binding="{Binding Path=AantalsignalenIn,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn Header="# Uit" Binding="{Binding Path=AantalsignalenUit,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn
                                Visibility="{Binding Path=DataContext.ShowMultivalent,Source={x:Reference ProxyElement},Converter={StaticResource Bool2VisConv}}"
                                Header="# In multiv." Binding="{Binding Path=AantalsignalenMultivalentIn,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn
                                Visibility="{Binding Path=DataContext.ShowMultivalent,Source={x:Reference ProxyElement},Converter={StaticResource Bool2VisConv}}"
                                Header="# Uit multiv." Binding="{Binding Path=AantalsignalenMultivalentUit,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn Header="Poort sim." Binding="{Binding Path=PortnummerSimuatieOmgeving,UpdateSourceTrigger=PropertyChanged}"/>
                            <DataGridTextColumn Binding="{Binding Path=PortnummerAutomaatOmgeving,UpdateSourceTrigger=PropertyChanged}" >
                                <DataGridTextColumn.Header>
                                    <DockPanel>
                                        <TextBlock Text="Poort VRA/ITS" Margin="0,0,5,0" DockPanel.Dock="Left" />
                                        <controls:InfoElement DockPanel.Dock="Right">
                                            <controls:InfoElement.InfoPopup>
                                                <TextBlock>
                                                    PTP ID in de VRA of in de ITS-applicatie <LineBreak />
                                                    (bij PTP over serieel is dit het COMpoort nummer).
                                                </TextBlock>
                                            </controls:InfoElement.InfoPopup>
                                        </controls:InfoElement>
                                    </DockPanel>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Path=PortNaarBackupRegeling,UpdateSourceTrigger=PropertyChanged}" >
                                <DataGridTextColumn.Header>
                                    <DockPanel>
                                        <TextBlock Text="Poort backup" Margin="0,0,5,0" DockPanel.Dock="Left" />
                                        <controls:InfoElement DockPanel.Dock="Right">
                                            <controls:InfoElement.InfoPopup>
                                                <TextBlock>
                                                    PTP ID voor verbinding met in de backup applicatie van de buur-VRI.<LineBreak />
                                                    Om gebruik te maken van het overnemen van de PTP verbinding wanneer in<LineBreak />
                                                    de gekoppelde buur-VRI wordt overgeschakeld naar de backup regeling<LineBreak />
                                                    - dient de regeling in de buur-VRI tenminste CCOL 11 te zijn, en<LineBreak />
                                                    - dient <Span FontStyle="Italic">bij de buur-VRI</Span> de optie <Span Background="White">'Alleen tijdens in control'</Span> te worden aangevinkt. <LineBreak />
                                                    Zie ook de uitleg in het document 'PTP koppelingen in iVRI omgeving' <LineBreak />
                                                    in de TLCGen 'Docs' directory.
                                                </TextBlock>
                                            </controls:InfoElement.InfoPopup>
                                        </controls:InfoElement>
                                    </DockPanel>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Source" Binding="{Binding Path=NummerSource,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn Header="Destination" Binding="{Binding Path=NummerDestination,UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridCheckBoxColumn Binding="{Binding Path=Dummy,UpdateSourceTrigger=PropertyChanged}"  Width="74">
                                <DataGridCheckBoxColumn.Header >
                                    <DockPanel>
                                        <TextBlock Text="Dummy" Margin="0,0,5,0" DockPanel.Dock="Left" />
                                        <controls:InfoElement DockPanel.Dock="Left">
                                            <controls:InfoElement.InfoPopup>
                                                <TextBlock>
                                                    Maak alleen de hulpelementen hxxxiksyy en hxxxuksyy aan <LineBreak/>
                                                    die doorgaans horen bij een ptp koppeling.<LineBreak/>
                                                    Code in ###ptp.c wordt niet gegenereerd voor <LineBreak/>
                                                    koppelingen waarbij 'Dummy' is geselecteerd.
                                                </TextBlock>
                                            </controls:InfoElement.InfoPopup>
                                        </controls:InfoElement>
                                    </DockPanel>
                                </DataGridCheckBoxColumn.Header>
                            </DataGridCheckBoxColumn>
                            <DataGridCheckBoxColumn Binding="{Binding Path=MaakIO,UpdateSourceTrigger=PropertyChanged}"  Width="72">
                                <DataGridCheckBoxColumn.Header >
                                    <DockPanel>
                                        <TextBlock Text="MaakIO" Margin="0,0,5,0" DockPanel.Dock="Left" />
                                        <controls:InfoElement DockPanel.Dock="Left">
                                            <controls:InfoElement.InfoPopup>
                                                <TextBlock>
                                                    Maak evenveel in- en uitgangen aan als er <LineBreak/>
                                                    onder <Span FontWeight="Bold" Background="White"># In</Span> resp. <Span FontWeight="Bold" Background="White"># Uit</Span> zijn opgegeven.<LineBreak/>
                                                    Deze worden in de regelapplicatie gekoppeld:<LineBreak/>
                                                    CIF_GUS[usXP99uks01] = IH[hXP99uks01] etc.
                                                </TextBlock>
                                            </controls:InfoElement.InfoPopup>
                                        </controls:InfoElement>
                                    </DockPanel>
                                </DataGridCheckBoxColumn.Header>
                            </DataGridCheckBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DockPanel Grid.Row="1" Grid.ColumnSpan="2">
                        <Button Content="Toevoegen" Command="{Binding AddPTPKoppelingCommand}" Margin="1" />
                        <Button Content="Verwijderen" Command="{Binding RemovePTPKoppelingCommand}" Margin="1" />
                        <Label Content="" Height="30" Margin="-2.0" />
                        <CheckBox Content="Instellingen in parameters" Margin="8" IsChecked="{Binding Path=PTPInstellingenInParameters}" DockPanel.Dock="Right" HorizontalAlignment="Right" />
                        <!-- de IsEnabled test op de (reeds bestaande) DataContext.ShowMultivalent hieronder wordt gebruikt om te verifieren of CCOL 11+ is toegepast -->
                        <CheckBox Content="Alleen tijdens 'in control'" Margin="8" IsChecked="{Binding Path=PTPAlleenTijdensControl}" DockPanel.Dock="Right" HorizontalAlignment="Right" 
                                  IsEnabled="{Binding Path=DataContext.ShowMultivalent,Source={x:Reference ProxyElement},TargetNullValue=false}" />
                        <controls:InfoElement Margin="-3,0" RenderTransformOrigin="0.5,0.5" DockPanel.Dock="Right" HorizontalAlignment="Right" >
                            <controls:InfoElement.InfoPopup>
                                <TextBlock >
                                PTP verbinding(en) alleen opzetten wanneer <LineBreak/>
                                de (ITS/backup) regelapplicatie 'in control' is.<LineBreak/>
                                Alleen mogelijk bij CCOL 11 en hoger.    
                                </TextBlock>
                            </controls:InfoElement.InfoPopup>
                        </controls:InfoElement>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Toedeling Koppelsignalen">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Label Content="Kruispunt" />
                    <ListView Grid.Row="1" ItemsSource="{Binding Path=PTPKoppelingen}" Margin="2"
                              SelectedItem="{Binding Path=SelectedPTPKoppeling,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="TeKoppelenKruispunt" />
                    <GridSplitter Width="5" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" />
                    <TabControl Grid.Column="2" Grid.Row="0" Grid.RowSpan="2">
                        <TabItem Header="Inkomend">
                            <Grid DataContext="{Binding Path=SelectedPTPKoppeling}" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Column="0" Grid.Row="0" Content="PTP ingangen" />
                                <Label Grid.Column="1" Grid.Row="0" Content="Niet toegedeeld" />
                                <ListView
                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    dd:DragDrop.IsDropTarget="True"
                                    dd:DragDrop.IsDragSource="True"
                                    dd:DragDrop.UseDefaultEffectDataTemplate="True"
                                    dd:DragDrop.UseDefaultDragAdorner="True"
                                    dd:DragDrop.DropHandler="{Binding}" 
                                    SelectedItem="{Binding Path=SelectedKoppelSignaalIn, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding Path=KoppelSignalenIn}" Margin="2" Grid.Row="1" AlternationCount="2">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Style.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                                    <Setter Property="Background" Value="DarkGray" />
                                                </Trigger>
                                            </Style.Triggers>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="MinWidth" Value="120"/>
                                            <Setter Property="Margin" Value="2"/>
                                            <Setter Property="Padding" Value="0"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Height="20" HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="25" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Path=Count}" />
                                                <TextBlock Background="Beige" Text="{Binding Path=Description}" Grid.Column="1" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <ListView
                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    dd:DragDrop.DropHandler="{Binding}" 
                                    dd:DragDrop.IsDropTarget="True"
                                    dd:DragDrop.IsDragSource="True"
                                    dd:DragDrop.UseDefaultEffectDataTemplate="True"
                                    dd:DragDrop.UseDefaultDragAdorner="True"
                                    ItemsSource="{Binding Path=KoppelSignalenInBeschikbaar}" Margin="2" Grid.Row="1" Grid.Column="2" AlternationCount="2">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Style.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                                    <Setter Property="Background" Value="DarkGray" />
                                                </Trigger>
                                            </Style.Triggers>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="MinWidth" Value="120"/>
                                            <Setter Property="Margin" Value="2"/>
                                            <Setter Property="Padding" Value="0"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Background="Beige" Text="{Binding Path=Description}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <StackPanel Orientation="Horizontal"  Grid.Row="2">
                                    <Button Content="Verwijderen" Command="{Binding Path=RemoveKoppelSignaalInCommand}" Margin="2" />
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Uitgaand">
                            <Grid DataContext="{Binding Path=SelectedPTPKoppeling}" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Column="0" Grid.Row="0" Content="PTP uitgangen" />
                                <Label Grid.Column="1" Grid.Row="0" Content="Niet toegedeeld" />
                                <ListView
                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    dd:DragDrop.IsDropTarget="True"
                                    dd:DragDrop.IsDragSource="True"
                                    dd:DragDrop.UseDefaultEffectDataTemplate="True"
                                    dd:DragDrop.UseDefaultDragAdorner="True"
                                    dd:DragDrop.DropHandler="{Binding}" 
                                    SelectedItem="{Binding Path=SelectedKoppelSignaalUit, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding Path=KoppelSignalenUit}" Margin="2" Grid.Row="1" AlternationCount="2">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Style.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                                    <Setter Property="Background" Value="DarkGray" />
                                                </Trigger>
                                            </Style.Triggers>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="MinWidth" Value="120"/>
                                            <Setter Property="Margin" Value="2"/>
                                            <Setter Property="Padding" Value="0"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Height="20" HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="25" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Path=Count}" />
                                                <TextBlock Background="Beige" Text="{Binding Path=Description}" Grid.Column="1" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <ListView
                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                    dd:DragDrop.IsDropTarget="True"
                                    dd:DragDrop.IsDragSource="True"
                                    dd:DragDrop.UseDefaultEffectDataTemplate="True"
                                    dd:DragDrop.UseDefaultDragAdorner="True"
                                    dd:DragDrop.DropHandler="{Binding}" 
                                    ItemsSource="{Binding Path=KoppelSignalenUitBeschikbaar}" Margin="2" Grid.Row="1" Grid.Column="2" AlternationCount="2">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Style.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                                    <Setter Property="Background" Value="DarkGray" />
                                                </Trigger>
                                            </Style.Triggers>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="MinWidth" Value="120"/>
                                            <Setter Property="Margin" Value="2"/>
                                            <Setter Property="Padding" Value="0"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Height="20" HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="25" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Background="Beige" Text="{Binding Path=Description}" Grid.Column="1" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <StackPanel Orientation="Horizontal"  Grid.Row="2">
                                    <Button Content="Verwijderen" Command="{Binding Path=RemoveKoppelSignaalUitCommand}" Margin="2" />
                                </StackPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
