<UserControl x:Class="TLCGen.Views.FaseCyclusView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TLCGen.Views"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:helper="clr-namespace:TLCGen.Helpers;assembly=TLCGen.Dependencies"
             xmlns:enums="clr-namespace:TLCGen.Models.Enumerations;assembly=TLCGen.Dependencies"
             xmlns:ct="clr-namespace:TLCGen.Controls;assembly=TLCGen.Controls"
             xmlns:viewModels="clr-namespace:TLCGen.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance viewModels:FaseCyclusViewModel}">
    <UserControl.Resources>
        <local:RadioButtonCheckedConverter x:Key="RadioButtonCheckedConverter" />
        <BooleanToVisibilityConverter x:Key="Bool2VisConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <WrapPanel Orientation="Horizontal">
            <GroupBox Header="Verkeerssoort">
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="TypeGroup" Content="Auto" 
                                 IsChecked="{Binding Path=Type,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:FaseTypeEnum.Auto}}" />
                    <RadioButton GroupName="TypeGroup" Content="Fiets" 
                                 IsChecked="{Binding Type, ConverterParameter={x:Static enums:FaseTypeEnum.Fiets}, Converter={StaticResource RadioButtonCheckedConverter}}" />
                    <RadioButton GroupName="TypeGroup" Content="Voetganger" 
                                 IsChecked="{Binding Path=Type,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:FaseTypeEnum.Voetganger}}" />
                    <RadioButton GroupName="TypeGroup" Content="OV" 
                                 IsChecked="{Binding Path=Type,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:FaseTypeEnum.OV}}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Vaste aanvraag">
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="VasteAanvraagGroup" Content="Nooit" 
                                 IsChecked="{Binding Path=VasteAanvraag,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.Nooit}}" />
                    <RadioButton GroupName="VasteAanvraagGroup" Content="Altijd" 
                                 IsChecked="{Binding Path=VasteAanvraag,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.Altijd}}" />
                    <RadioButton GroupName="VasteAanvraagGroup" Content="Ingeschakeld" 
                                 IsChecked="{Binding Path=VasteAanvraag,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.SchAan}}" />
                    <RadioButton GroupName="VasteAanvraagGroup" Content="Uitgeschakeld" 
                                 IsChecked="{Binding Path=VasteAanvraag,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.SchUit}}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Wachtgroen">
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="WachtgroenGroup" Content="Nooit" 
                                 IsChecked="{Binding Path=Wachtgroen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.Nooit}}" />
                    <RadioButton GroupName="WachtgroenGroup" Content="Altijd" 
                                 IsChecked="{Binding Path=Wachtgroen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.Altijd}}" />
                    <RadioButton GroupName="WachtgroenGroup" Content="Ingeschakeld" 
                                 IsChecked="{Binding Path=Wachtgroen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.SchAan}}" />
                    <RadioButton GroupName="WachtgroenGroup" Content="Uitgeschakeld" 
                                 IsChecked="{Binding Path=Wachtgroen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.SchUit}}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Meeverlengen">
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="MeeverlengenGroup" Content="Nooit" 
                                 IsChecked="{Binding Path=Meeverlengen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.Nooit}}" />
                    <RadioButton GroupName="MeeverlengenGroup" Content="Altijd" 
                                 IsChecked="{Binding Path=Meeverlengen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.Altijd}}" />
                    <RadioButton GroupName="MeeverlengenGroup" Content="Ingeschakeld" 
                                 IsChecked="{Binding Path=Meeverlengen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.SchAan}}" />
                    <RadioButton GroupName="MeeverlengenGroup" Content="Uitgeschakeld" 
                                 IsChecked="{Binding Path=Meeverlengen,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:NooitAltijdAanUitEnum.SchUit}}" />
                </StackPanel>
            </GroupBox>
        </WrapPanel>
        <WrapPanel Grid.Row="1">
            <GroupBox Header="Opties meeverlengen">
                <GroupBox.Style>
                    <Style TargetType="GroupBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Meeverlengen}" Value="Nooit">
                                <DataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <StackPanel Orientation="Vertical">
                    <DockPanel>
                        <Label Content="Type meeverlengen" />
                        <ct:InfoElement>
                            <ct:InfoElement.InfoPopup>
                                <TextBlock>
                                    Opties voor meeverlengen:<LineBreak />
                                    ymmaxV1 - de default TLCGen meeverleng functie<LineBreak />
                                    ymmax_toV1 - houdt rekening met ontruimingstijden<LineBreak />
                                    ymmaxV1 || MK[fc] &amp;&amp; ymmax_toV1 - default, maar bij MK kijken naar ontruimingstijden<LineBreak />
                                    ymmax_vtg - meeverleng functie voor voetgangers<LineBreak/>
                                    ymmax - de default CCOL meeverleng functie<LineBreak />
                                    ymmax_to - idem als eerder, nu met default CCOL functies<LineBreak />
                                    ymmaxV1 || MK[fc] &amp;&amp; ymmax_toV1 - idem als eerder, nu met default CCOL functies
                                </TextBlock>
                            </ct:InfoElement.InfoPopup>
                        </ct:InfoElement>
                    </DockPanel>
                    <ComboBox 
                        ItemsSource="{Binding Path=MeeverlengenOpties}"
                        SelectedValue="{Binding Path=MeeverlengenTypeString,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                    <!--<RadioButton GroupName="MeeverlengenTypeGroup" Content="Default" 
                                 IsChecked="{Binding Path=MeeverlengenType,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:MeeVerlengenTypeEnum.Default}}" />
                    <RadioButton GroupName="MeeverlengenTypeGroup" Content="Voetganger" 
                                 IsChecked="{Binding Path=MeeverlengenType,Converter={StaticResource RadioButtonCheckedConverter},ConverterParameter={x:Static enums:MeeVerlengenTypeEnum.Voetganger}}" />-->
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=MeeverlengenType}" Value="Voetganger">
                                        <DataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Label Content="Ontruimingstijd verschil" />
                        <TextBox Text="{Binding Path=MeeverlengenVerschil,TargetNullValue={x:Static sys:String.Empty}}" Margin="2" />
                    </StackPanel>
                    <CheckBox Content="Type instelbaar op straat" VerticalAlignment="Center" Margin="5" 
                              IsChecked="{Binding Path=MeeverlengenTypeInstelbaarOpStraat}"/>
                    <StackPanel>
                        <Label Content="Hard meeverlengen met" />
                        <ct:SpecialDataGrid ItemsSource="{Binding Path=HardMeeverlengenFaseCycli}" Margin="2" CanUserAddRows="False" CanUserDeleteRows="False"
                                  AutoGenerateColumns="False" 
                                            SelectedItem="{Binding SelectedHardMeeverlengenFase,UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding Path=HasHardMeeverlengenFasen,Mode=OneWay,Converter={StaticResource Bool2VisConverter}}">
                            <DataGrid.RowHeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                      AncestorType={x:Type DataGridRow}}, 
                                      Path=Item.FaseCyclus}"/>
                                </DataTemplate>
                            </DataGrid.RowHeaderTemplate>
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn Header="Type"
                                    ItemsSource="{Binding Source={helper:EnumBindingSource {x:Type enums:HardMeevelengenTypeEnum}}}"
                                    SelectedValueBinding="{Binding Path=Type,UpdateSourceTrigger=PropertyChanged}" />
                                <DataGridCheckBoxColumn Header="Aan/uit"
                                    Binding="{Binding Path=AanUit,UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </ct:SpecialDataGrid>
                        <local:ItemsManagerView DataContext="{Binding Path=HardMeeverlengenFasenManager}" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Detectie storing">
                <StackPanel>
                    <CheckBox Content="Aanvraag" IsChecked="{Binding Path=AanvraagBijDetectieStoring,UpdateSourceTrigger=PropertyChanged}" ToolTip="Aanvraag bij storing op alle aanvraag detectie (op een rijstrook)" Margin="5" />
                    <CheckBox 
                        Visibility="{Binding Path=AanvraagBijDetectieStoringVertraagdVisible,Converter={StaticResource Bool2VisConverter}}"
                        Content="Aanvr.: vertraagd" IsChecked="{Binding Path=AanvraagBijDetectieStoringVertraagd,UpdateSourceTrigger=PropertyChanged}" ToolTip="T.b.v. aanvraag bij storing: vertraagd opzetten aanvraag" Margin="5" />
                    <Label Content="Aanvr. vertraging" Visibility="{Binding Path=AanvraagBijDetectieStoringVertraagd,Converter={StaticResource Bool2VisConverter}}" />
                    <TextBox Margin="2" Visibility="{Binding Path=AanvraagBijDetectieStoringVertraagd,Converter={StaticResource Bool2VisConverter}}"
                             Text="{Binding Path=AanvraagBijDetectieStoringVertraging,UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox 
                        Visibility="{Binding Path=AanvraagBijDetectieStoringKoplusKnopVisible,Converter={StaticResource Bool2VisConverter}}"
                        Content="Aanvr.: kop &amp; knop" IsChecked="{Binding Path=AanvraagBijDetectieStoringKoplusKnop,UpdateSourceTrigger=PropertyChanged}" ToolTip="T.b.v. aanvraag bij storing: alleen kijken naar knoppen en koplussen (op een rijstrook)" Margin="5" />
                    <CheckBox 
                        Visibility="{Binding Path=AanvraagBijDetectieStoringKopLangVisible,Converter={StaticResource Bool2VisConverter}}"
                        Content="Aanvr.: kop &amp; lang" IsChecked="{Binding Path=AanvraagBijDetectieStoringKopLang,UpdateSourceTrigger=PropertyChanged}" ToolTip="T.b.v. aanvraag bij storing: alleen kijken naar kop en lange lussen (op een rijstrook)" Margin="5" />
                    <CheckBox Content="Hiaat koplus" 
                              IsEnabled="{Binding Path=HasHiaatKoplusBijDetectieStoring}"
                              IsChecked="{Binding Path=HiaatKoplusBijDetectieStoring,UpdateSourceTrigger=PropertyChanged}" ToolTip="Hiaat koplus bij defect lange lus" Margin="5" />
                    <Label IsEnabled="{Binding Path=HasHiaatKoplusBijDetectieStoring}" Content="Vervangend hiaat" />
                    <TextBox Text="{Binding Path=VervangendHiaatKoplus,TargetNullValue={x:Static sys:String.Empty},UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=HiaatKoplusBijDetectieStoring}" ToolTip="Hiaat koplus bij defect lange lus" Margin="2"/>
                    <CheckBox Content="Percentage groentijd" 
                              IsEnabled="{Binding Path=HasPercentageGroenBijDetectieStoring}"
                              IsChecked="{Binding Path=PercentageGroenBijDetectieStoring,UpdateSourceTrigger=PropertyChanged}" ToolTip="Percentage groentijd bij defect kop- en lange lus op een rijstrook"  Margin="5" />
                    <Label IsEnabled="{Binding Path=PercentageGroenBijDetectieStoring}" Content="Percentage groen" />
                    <TextBox Text="{Binding Path=PercentageGroenBijStoring,TargetNullValue={x:Static sys:String.Empty},UpdateSourceTrigger=PropertyChanged}" 
                             IsEnabled="{Binding Path=PercentageGroenBijDetectieStoring}" ToolTip="Hiaat koplus bij defect lange lus" Margin="2"/>

                </StackPanel>
            </GroupBox>
            <StackPanel>
                <GroupBox Header="Vaste aanvraag opties">
                    <StackPanel>
                        <CheckBox Content="Uitgestelde aanvraag" IsChecked="{Binding Path=UitgesteldeVasteAanvraag,UpdateSourceTrigger=PropertyChanged}"
                                  Margin="5" IsEnabled="{Binding UitgesteldeVasteAanvraagPossible}"/>
                        <TextBox Margin="2" Text="{Binding UitgesteldeVasteAanvraagTijdsDuur,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding UitgesteldeVasteAanvraag}" />
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Overige opties" Width="205">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox Content="Toepassen MK2" IsChecked="{Binding Path=ToepassenMK2,UpdateSourceTrigger=PropertyChanged}"
                                      Margin="5" IsEnabled="{Binding Path=ToepassenMK2Enabled}" />
                            <ct:InfoElement>
                                <ct:InfoElement.InfoPopup>
                                    <TextBlock>
                                        Dit is uitsluitend beschikbaar voor auto en OV, wanneer<LineBreak />
                                        de betreffende fase meerdere rijstroken heeft. Aanvinken<LineBreak />
                                        zorgt voor gebruik van meetkriterium2() binnen CCOL.
                                    </TextBlock>
                                </ct:InfoElement.InfoPopup>
                            </ct:InfoElement>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Toepassen school ingreep" />
                            <ct:InfoElement Visibility="{Binding Path=SchoolIngreepActive,Converter={StaticResource Bool2VisConverter}}">
                                <ct:InfoElement.InfoPopup>
                                    <TextBlock>
                                        Voor alle drukknoppen van een richting <LineBreak />
                                        waarvoor een schoolingreep wordt opgenomen, <LineBreak />
                                        moet ook een TDH worden ingesteld.
                                    </TextBlock>
                                </ct:InfoElement.InfoPopup>
                            </ct:InfoElement>
                        </StackPanel>
                        <ComboBox 
                            ItemsSource="{Binding Source={helper:EnumBindingSource {x:Type enums:NooitAltijdAanUitEnum}}}" 
                            IsEnabled="{Binding Path=SchoolIngreepEnabled}"
                            SelectedValue="{Binding Path=SchoolIngreep,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                        <StackPanel Orientation="Vertical" Visibility="{Binding Path=SchoolIngreepActive,Converter={StaticResource Bool2VisConverter}}">
                            <Label Content="School ingreep max. groen" />
                            <TextBox 
                                Text="{Binding Path=SchoolIngreepMaximumGroen,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                            <Label Content="School ingreep TDB drukknop" />
                            <TextBox 
                                Text="{Binding Path=SchoolIngreepBezetTijd,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                        </StackPanel>
                        <Label Content="Toepassen senioren ingreep" />
                        <ComboBox 
                            ItemsSource="{Binding Source={helper:EnumBindingSource {x:Type enums:NooitAltijdAanUitEnum}}}" 
                            IsEnabled="{Binding Path=SeniorenIngreepEnabled}"
                            SelectedValue="{Binding Path=SeniorenIngreep,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                        <StackPanel Orientation="Vertical" Visibility="{Binding Path=SeniorenIngreepActive,Converter={StaticResource Bool2VisConverter}}">
                            <Label Content="Senioren ingreep perc. extra groen" />
                            <TextBox 
                                Text="{Binding Path=SeniorenIngreepExtraGroenPercentage,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                            <Label Content="Senioren ingreep TDB drukknop" />
                            <TextBox 
                                Text="{Binding Path=SeniorenIngreepBezetTijd,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                        </StackPanel>
                        <StackPanel Orientation="Vertical">
                            <DockPanel>
                                <Label Content="Type alternatieve ruimte" />
                                <ct:InfoElement>
                                    <ct:InfoElement.InfoPopup>
                                        <TextBlock>
                                            Opties voor alternatieve ruimte:<LineBreak />
                                            max_tar_to/tig - CCOL functies alternatieve ruimte, met TO of TIG<LineBreak />
                                            max_tar - CCOL functies alternatieve ruimte, zonder TO of TIG<LineBreak />
                                            Real_Ruimte - alternatieve ruimte obv realfunc methodiek
                                        </TextBlock>
                                    </ct:InfoElement.InfoPopup>
                                </ct:InfoElement>
                            </DockPanel>
                            <ComboBox 
                                ItemsSource="{Binding Path=AlternatieveRuimteOpties}"
                                SelectedValue="{Binding Path=AlternatieveRuimteTypeString,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="2" />
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </WrapPanel>
    </Grid>
</UserControl>
